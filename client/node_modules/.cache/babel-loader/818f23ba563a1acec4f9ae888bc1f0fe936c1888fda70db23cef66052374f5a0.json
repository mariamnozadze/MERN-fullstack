{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\nvar _assertString = require('./util/assertString');\nvar _assertString2 = _interopRequireDefault(_assertString);\nvar _isFQDN = require('./isFQDN');\nvar _isFQDN2 = _interopRequireDefault(_isFQDN);\nvar _isIP = require('./isIP');\nvar _isIP2 = _interopRequireDefault(_isIP);\nvar _merge = require('./util/merge');\nvar _merge2 = _interopRequireDefault(_merge);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isURL(url, options) {\n  (0, _assertString2.default)(url);\n  if (!url || url.length >= 2083 || /[\\s<>]/.test(url)) {\n    return false;\n  }\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n  options = (0, _merge2.default)(options, default_url_options);\n  var protocol = void 0,\n    auth = void 0,\n    host = void 0,\n    hostname = void 0,\n    port = void 0,\n    port_str = void 0,\n    split = void 0,\n    ipv6 = void 0;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n  if (split.length > 1) {\n    protocol = split.shift();\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {\n    split[0] = url.substr(2);\n  }\n  url = split.join('://');\n  if (url === '') {\n    return false;\n  }\n  split = url.split('/');\n  url = split.shift();\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n  split = url.split('@');\n  if (split.length > 1) {\n    auth = split.shift();\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n  }\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n  if (port_str !== null) {\n    port = parseInt(port_str, 10);\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  }\n  if (!(0, _isIP2.default)(host) && !(0, _isFQDN2.default)(host, options) && (!ipv6 || !(0, _isIP2.default)(ipv6, 6))) {\n    return false;\n  }\n  host = host || ipv6;\n  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {\n    return false;\n  }\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n  return true;\n}\nmodule.exports = exports['default'];","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isURL","_assertString","require","_assertString2","_interopRequireDefault","_isFQDN","_isFQDN2","_isIP","_isIP2","_merge","_merge2","obj","__esModule","default_url_options","protocols","require_tld","require_protocol","require_host","require_valid_protocol","allow_underscores","allow_trailing_dot","allow_protocol_relative_urls","wrapped_ipv6","isRegExp","prototype","toString","call","checkHost","host","matches","i","length","match","test","url","options","indexOf","protocol","auth","hostname","port","port_str","split","ipv6","shift","substr","join","ipv6_match","parseInt","host_whitelist","host_blacklist","module"],"sources":["D:/projects/React Projects/mern-fullstack/node_modules/validator/lib/isURL.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _isFQDN = require('./isFQDN');\n\nvar _isFQDN2 = _interopRequireDefault(_isFQDN);\n\nvar _isIP = require('./isIP');\n\nvar _isIP2 = _interopRequireDefault(_isIP);\n\nvar _merge = require('./util/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false\n};\n\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString2.default)(url);\n  if (!url || url.length >= 2083 || /[\\s<>]/.test(url)) {\n    return false;\n  }\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n  options = (0, _merge2.default)(options, default_url_options);\n  var protocol = void 0,\n      auth = void 0,\n      host = void 0,\n      hostname = void 0,\n      port = void 0,\n      port_str = void 0,\n      split = void 0,\n      ipv6 = void 0;\n\n  split = url.split('#');\n  url = split.shift();\n\n  split = url.split('?');\n  url = split.shift();\n\n  split = url.split('://');\n  if (split.length > 1) {\n    protocol = split.shift();\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {\n    split[0] = url.substr(2);\n  }\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n  if (split.length > 1) {\n    auth = split.shift();\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n  }\n  hostname = split.join('@');\n\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null) {\n    port = parseInt(port_str, 10);\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  }\n\n  if (!(0, _isIP2.default)(host) && !(0, _isFQDN2.default)(host, options) && (!ipv6 || !(0, _isIP2.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {\n    return false;\n  }\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\nmodule.exports = exports['default'];"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}