{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\React Projects\\\\mern-fullstack\\\\client\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Navigate, Routes } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Router } from \"express\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  component: Component,\n  auth: {\n    isAuthenticated,\n    loading\n  },\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Router, {\n  children: [/*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => !isAuthenticated && !loading ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this), \"/>\"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this);\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Navigate","Routes","PropTypes","connect","Router","jsxDEV","_jsxDEV","PrivateRoute","component","Component","auth","isAuthenticated","loading","rest","children","fileName","_jsxFileName","lineNumber","columnNumber","render","props","to","_c","propTypes","object","isRequired","mapStateToProps","state","$RefreshReg$"],"sources":["D:/projects/React Projects/mern-fullstack/client/src/components/routing/PrivateRoute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Route, Navigate, Routes } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Router } from \"express\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n    <Router>\r\n  <Routes></Routes>\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          !isAuthenticated && !loading ? (\r\n            <Navigate to=\"/login\" />\r\n          ) : (\r\n            <Component {...props} />\r\n          )\r\n        }\r\n      />\r\n    />\r\n    </Router>\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAC1D,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,MAAM,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,YAAY,GAAGA,CAAC;EACpBC,SAAS,EAAEC,SAAS;EACpBC,IAAI,EAAE;IAAEC,eAAe;IAAEC;EAAQ,CAAC;EAClC,GAAGC;AACL,CAAC,kBACGP,OAAA,CAACF,MAAM;EAAAU,QAAA,gBACTR,OAAA,CAACL,MAAM;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC,eACbZ,OAAA,CAACP,KAAK;IAAA,GACAc,IAAI;IACRM,MAAM,EAAGC,KAAK,IACZ,CAACT,eAAe,IAAI,CAACC,OAAO,gBAC1BN,OAAA,CAACN,QAAQ;MAACqB,EAAE,EAAC;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAExBZ,OAAA,CAACG,SAAS;MAAA,GAAKW;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAE1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC,MAEJ;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAQ,CACX;AAACI,EAAA,GAnBIf,YAAY;AAqBlBA,YAAY,CAACgB,SAAS,GAAG;EACvBb,IAAI,EAAER,SAAS,CAACsB,MAAM,CAACC;AACzB,CAAC;AAED,MAAMC,eAAe,GAAIC,KAAK,KAAM;EAClCjB,IAAI,EAAEiB,KAAK,CAACjB;AACd,CAAC,CAAC;AAEF,eAAeP,OAAO,CAACuB,eAAe,CAAC,CAACnB,YAAY,CAAC;AAAC,IAAAe,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}