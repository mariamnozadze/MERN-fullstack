{"ast":null,"code":"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\n\n// initial state for the alerts array\nconst initialState = [];\n\n// Reducer function\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      // Removing an alert from the state array based on its id\n      return state.filter(alert => alert.id !== payload);\n    // Default case returns the current state if the action type is not recognized\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["SET_ALERT","REMOVE_ALERT","initialState","state","action","type","payload","filter","alert","id"],"sources":["D:/projects/React Projects/mern-fullstack/client/src/reducers/alert.js"],"sourcesContent":["import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\n\r\n// initial state for the alerts array\r\nconst initialState = [];\r\n\r\n// Reducer function\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      // Removing an alert from the state array based on its id\r\n      return state.filter((alert) => alert.id !== payload);\r\n        // Default case returns the current state if the action type is not recognized\r\n      default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,YAAY,QAAQ,kBAAkB;;AAE1D;AACA,MAAMC,YAAY,GAAG,EAAE;;AAEvB;AACA,eAAe,UAAUC,KAAK,GAAGD,YAAY,EAAEE,MAAM,EAAE;EACrD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAQC,IAAI;IACV,KAAKL,SAAS;MACZ,OAAO,CAAC,GAAGG,KAAK,EAAEG,OAAO,CAAC;IAC5B,KAAKL,YAAY;MACf;MACA,OAAOE,KAAK,CAACI,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKH,OAAO,CAAC;IAClD;IACF;MACA,OAAOH,KAAK;EAChB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}