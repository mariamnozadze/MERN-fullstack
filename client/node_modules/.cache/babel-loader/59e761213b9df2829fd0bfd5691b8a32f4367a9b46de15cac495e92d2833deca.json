{"ast":null,"code":"import { configureStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nconst initialState = {};\nconst middleware = [thunk];\n\n// Assuming rootReducer is a combined reducer created with combineReducers\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState: initialState,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(middleware),\n  devTools: process.env.NODE_ENV !== 'production'\n});\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","applyMiddleware","composeWithDevTools","thunk","rootReducer","initialState","middleware","store","reducer","preloadedState","getDefaultMiddleware","concat","devTools","process","env","NODE_ENV"],"sources":["D:/projects/React Projects/mern-fullstack/client/src/store.js"],"sourcesContent":["import { configureStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\n// Assuming rootReducer is a combined reducer created with combineReducers\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  preloadedState: initialState,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(middleware),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACxE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,WAAW,MAAM,YAAY;AAEpC,MAAMC,YAAY,GAAG,CAAC,CAAC;AAEvB,MAAMC,UAAU,GAAG,CAACH,KAAK,CAAC;;AAE1B;AACA,MAAMI,KAAK,GAAGR,cAAc,CAAC;EAC3BS,OAAO,EAAEJ,WAAW;EACpBK,cAAc,EAAEJ,YAAY;EAC5BC,UAAU,EAAGI,oBAAoB,IAC/BA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACL,UAAU,CAAC;EAC3CM,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACrC,CAAC,CAAC;AAEF,eAAeR,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}