{"ast":null,"code":"import axios from \"axios\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from \"./types\";\nimport { setAlert } from \"./alert\";\n\n// Load User\nexport const loadUser = () => async dispatch => {};\n\n// Register User\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAlert","loadUser","dispatch","register","name","email","password","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"sources":["D:/projects/React Projects/mern-fullstack/client/src/actions/auth.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from \"./types\";\r\nimport { setAlert } from \"./alert\";\r\n\r\n// Load User\r\nexport const loadUser =() => async dispatch => {\r\n\r\n}\r\n\r\n// Register User\r\nexport const register =\r\n  ({ name, email, password }) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n      const res = await axios.post(\"/api/users\", body, config);\r\n\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n      }\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n    }\r\n  };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,QAAQ,SAAS;AAClF,SAASC,QAAQ,QAAQ,SAAS;;AAElC;AACA,OAAO,MAAMC,QAAQ,GAAEA,CAAA,KAAM,MAAMC,QAAQ,IAAI,CAE/C,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GACnBA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAC1B,MAAOJ,QAAQ,IAAK;EAClB,MAAMK,MAAM,GAAG;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EACD,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAAEP,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,CAAC;EAEtD,IAAI;IACF,MAAMM,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,YAAY,EAAEJ,IAAI,EAAEF,MAAM,CAAC;IAExDL,QAAQ,CAAC;MACPY,IAAI,EAAElB,gBAAgB;MACtBmB,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,MAAMC,MAAM,GAAGD,GAAG,CAACE,QAAQ,CAACH,IAAI,CAACE,MAAM;IAEvC,IAAIA,MAAM,EAAE;MACVA,MAAM,CAACE,OAAO,CAAEC,KAAK,IAAKnB,QAAQ,CAACF,QAAQ,CAACqB,KAAK,CAACC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;IACpE;IAEApB,QAAQ,CAAC;MACPY,IAAI,EAAEjB;IACR,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}